# What CMake to start at
# Define Board and cmake version
cmake_minimum_required(VERSION 2.8...3.13)
set(PICO_BOARD pico_w)
set(FAMILY rp2040)
set(BOARD pico_sdk)
set(PROJECT_NAME BLEClassicTest)

# define c library VERSION
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Include .cmake files from sdk
include($ENV{PICO_SDK_PATH}/pico_sdk_init.cmake)
include($ENV{PICO_SDK_PATH}/pico_sdk_version.cmake)

# Check sdk version
if (PICO_SDK_VERSION_STRING VERSION_LESS "1.5.1")
  message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.5.1 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

project(${PROJECT_NAME} C CXX ASM)

# Link source files and executables
add_executable(${PROJECT_NAME})

target_compile_definitions(${PROJECT_NAME} PRIVATE
    RUNNING_AS_CLIENT=1
)

#target_sources(${PROJECT_NAME} PUBLIC ${SRC_FILES})
target_sources(${PROJECT_NAME} PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main.c
        ${CMAKE_CURRENT_SOURCE_DIR}/src/btstack_hid.c
        ${CMAKE_CURRENT_SOURCE_DIR}/src/keyboard.h
)

# Add the standard library to the build
target_link_libraries(${PROJECT_NAME} PUBLIC
        pico_stdlib
        pico_btstack_ble
        pico_btstack_cyw43
        pico_cyw43_arch_none
      )

# Include config files for btstack and tusb
# btstack config
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/src/)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

pico_set_program_name(${PROJECT_NAME} ${PROJECT_NAME})
pico_set_program_version(${PROJECT_NAME} "1.0")

# enable uart/usb output, disable usb output
pico_enable_stdio_uart(${PROJECT_NAME} 1)
pico_enable_stdio_usb(${PROJECT_NAME} 1)

# Add the standard include files to the build
target_include_directories(${PROJECT_NAME} PRIVATE
  ${CMAKE_CURRENT_LIST_DIR}
  ${CMAKE_CURRENT_LIST_DIR}/.. # for our common lwipopts or any other standard includes, if required
)

pico_btstack_make_gatt_header(${PROJECT_NAME} PRIVATE
  "${CMAKE_CURRENT_LIST_DIR}/src/hog_keyboard_demo.gatt"
)

# create map/bin/hex file etc.
pico_add_extra_outputs(${PROJECT_NAME})